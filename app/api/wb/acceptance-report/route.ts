export const runtime = "nodejs";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏
interface AcceptanceItem {
  count: number;
  giCreateDate: string; // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI
  incomeId: number; // Income ID
  nmID: number; // –ê—Ä—Ç–∏–∫—É–ª WB
  shkCreateDate: string; // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö
  subjectName: string; // –ü—Ä–µ–¥–º–µ—Ç
  total: number; // –°—É–º–º–∞ (—Ä—É–±)
}

export async function POST(request: Request) {
  try {
    const { token, dateFrom, dateTo } = (await request.json()) as {
      token?: string;
      dateFrom?: string;
      dateTo?: string;
    };

    if (!token || !dateFrom || !dateTo) {
      return new Response(
        JSON.stringify({ error: "token, dateFrom –∏ dateTo –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" }),
        { status: 400, headers: { "Content-Type": "application/json" } }
      );
    }

    console.log(`üöÄ –ù–∞—á–∞–ª–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏: ${dateFrom} - ${dateTo}`);

    const base = "https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report";

    // 1) –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞
    console.log("üìä –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞...");
    const startRes = await fetch(
      `${base}?dateFrom=${encodeURIComponent(dateFrom)}&dateTo=${encodeURIComponent(dateTo)}`,
      {
        method: "GET",
        headers: {
          Authorization: token,
          "Content-Type": "application/json",
        },
        cache: "no-store",
      }
    );

    if (!startRes.ok) {
      const text = await startRes.text();
      return new Response(
        JSON.stringify({ error: text || `WB error ${startRes.status}` }),
        { status: startRes.status, headers: { "Content-Type": "application/json" } }
      );
    }

    const startJson = (await startRes.json()) as unknown;
    let taskId: string | undefined;
    
    if (
      typeof startJson === "object" &&
      startJson !== null &&
      "data" in (startJson as Record<string, unknown>)
    ) {
      const data = (startJson as Record<string, unknown>).data;
      if (typeof data === "object" && data !== null && "taskId" in data) {
        const t = (data as Record<string, unknown>).taskId;
        if (typeof t === "string") taskId = t;
      }
    }

    if (!taskId) {
      return new Response(
        JSON.stringify({ error: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å taskId" }),
        { status: 502, headers: { "Content-Type": "application/json" } }
      );
    }

    console.log(`üìã –ü–æ–ª—É—á–µ–Ω taskId: ${taskId}`);

    // 2) –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞
    const statusUrl = `${base}/tasks/${encodeURIComponent(taskId)}/status`;
    let isDone = false;
    
    // –º–∞–∫—Å–∏–º—É–º ~12 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥ = ~60 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
    for (let i = 0; i < 12; i++) {
      console.log(`‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞, –ø–æ–ø—ã—Ç–∫–∞ ${i + 1}/12...`);
      
      const stRes = await fetch(statusUrl, {
        method: "GET",
        headers: {
          Authorization: token,
          "Content-Type": "application/json",
        },
        cache: "no-store",
      });

      if (!stRes.ok) {
        const text = await stRes.text();
        return new Response(
          JSON.stringify({ error: text || `WB error ${stRes.status}` }),
          { status: stRes.status, headers: { "Content-Type": "application/json" } }
        );
      }

      const stJson = (await stRes.json()) as unknown;
      let status: string | undefined;
      
      if (
        typeof stJson === "object" &&
        stJson !== null &&
        "data" in (stJson as Record<string, unknown>)
      ) {
        const data = (stJson as Record<string, unknown>).data;
        if (typeof data === "object" && data !== null && "status" in data) {
          const s = (data as Record<string, unknown>).status;
          if (typeof s === "string") status = s;
        }
      }

      console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç–∞: ${status}`);

      if (status === "done") {
        isDone = true;
        break;
      }
      
      // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
      if (i < 11) {
        await new Promise((r) => setTimeout(r, 5000));
      }
    }

    if (!isDone) {
      return new Response(
        JSON.stringify({ error: "–û—Ç—á–µ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –≤ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è (60 —Å–µ–∫—É–Ω–¥)" }),
        { status: 504, headers: { "Content-Type": "application/json" } }
      );
    }

    // 3) –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    console.log("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...");
    const downloadUrl = `${base}/tasks/${encodeURIComponent(taskId)}/download`;
    const dlRes = await fetch(downloadUrl, {
      method: "GET",
      headers: {
        Authorization: token,
        "Content-Type": "application/json",
      },
      cache: "no-store",
    });

    if (!dlRes.ok) {
      const text = await dlRes.text();
      return new Response(
        JSON.stringify({ error: text || `WB error ${dlRes.status}` }),
        { status: dlRes.status, headers: { "Content-Type": "application/json" } }
      );
    }

    const acceptanceData = (await dlRes.json()) as unknown;
    
    if (!Array.isArray(acceptanceData)) {
      return new Response(
        JSON.stringify({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ download" }),
        { status: 502, headers: { "Content-Type": "application/json" } }
      );
    }

    const items = acceptanceData as AcceptanceItem[];
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${items.length} –∑–∞–ø–∏—Å–µ–π –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ (–¥–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏)`);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö (–ø–µ—Ä–∏–æ–¥ -1 –¥–µ–Ω—å)
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–∏–æ–¥ —Å 4 –ø–æ 10 –∞–≤–≥—É—Å—Ç–∞, —Ç–æ –¥–ª—è "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö" –±–µ—Ä–µ–º —Å 3 –ø–æ 9 –∞–≤–≥—É—Å—Ç–∞
    const startDate = new Date(dateFrom);
    const endDate = new Date(dateTo);
    
    // –°–º–µ—â–∞–µ–º –ø–µ—Ä–∏–æ–¥ –Ω–∞ -1 –¥–µ–Ω—å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ shkCreateDate
    const filterStartDate = new Date(startDate);
    filterStartDate.setDate(filterStartDate.getDate() - 1);
    const filterEndDate = new Date(endDate);
    filterEndDate.setDate(filterEndDate.getDate() - 1);
    
    console.log(`üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö": —Å ${filterStartDate.toISOString().split('T')[0]} –ø–æ ${filterEndDate.toISOString().split('T')[0]}`);

    const filteredItems = items.filter((item) => {
      if (!item.shkCreateDate) return false;
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –®–ö –≤ —Ñ–æ—Ä–º–∞—Ç Date
      const shkDate = new Date(item.shkCreateDate);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö –≤—Ö–æ–¥–∏—Ç –≤ —Å–º–µ—â–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
      return shkDate >= filterStartDate && shkDate <= filterEndDate;
    });

    console.log(`‚úÖ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Å—Ç–∞–ª–æ—Å—å ${filteredItems.length} –∑–∞–ø–∏—Å–µ–π`);

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
    const reportPeriod = `${new Date(dateFrom).toLocaleDateString('ru-RU')} - ${new Date(dateTo).toLocaleDateString('ru-RU')}`;

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Excel
    const rows = filteredItems.map((item) => ({
      "–ö–æ–ª-–≤–æ": item.count,
      "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI": item.giCreateDate,
      "Income ID": item.incomeId,
      "–ê—Ä—Ç–∏–∫—É–ª WB": item.nmID,
      "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö": item.shkCreateDate,
      "–ü—Ä–µ–¥–º–µ—Ç": item.subjectName,
      "–°—É–º–º–∞ (—Ä—É–±)": item.total,
      "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞": reportPeriod,
      "–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞": "" // –ü–æ–∫–∞ –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ, –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
    }));

    const fields = [
      "–ö–æ–ª-–≤–æ",
      "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI",
      "Income ID",
      "–ê—Ä—Ç–∏–∫—É–ª WB",
      "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö",
      "–ü—Ä–µ–¥–º–µ—Ç",
      "–°—É–º–º–∞ (—Ä—É–±)",
      "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞",
      "–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞"
    ];

    return new Response(
      JSON.stringify({ fields, rows }),
      { status: 200, headers: { "Content-Type": "application/json" } }
    );
  } catch (error: unknown) {
    const message = error instanceof Error ? error.message : String(error);
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ API –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏:', message);
    return new Response(
      JSON.stringify({ error: message || "Internal Server Error" }),
      { status: 500, headers: { "Content-Type": "application/json" } }
    );
  }
}