import { NextRequest, NextResponse } from 'next/server';
import * as XLSX from 'xlsx';
import { fetchCampaignSkus, fetchFinancialData } from '../../../../finance-utils';

export const runtime = "nodejs";

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { startDate, endDate, token } = body;

    if (!token || !startDate || !endDate) {
      return NextResponse.json({ 
        error: 'token, startDate –∏ endDate –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' 
      }, { status: 400 });
    }

    console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"...');
    const startTime = Date.now();

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±—É—Ñ–µ—Ä–Ω—ã–º–∏ –¥–Ω—è–º–∏
    const financialData = await fetchFinancialData(token, startDate, endDate);

    if (financialData.length === 0) {
      return NextResponse.json({ 
        error: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥' 
      }, { status: 404 });
    }

    // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const uniqueCampaigns = new Map();
    financialData.forEach(record => {
      if (!uniqueCampaigns.has(record.advertId)) {
        uniqueCampaigns.set(record.advertId, {
          advertId: record.advertId,
          name: record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è'
        });
      }
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ SKU ID
    const campaignsArray = Array.from(uniqueCampaigns.values());
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${campaignsArray.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π`);
    const skusMap = await fetchCampaignSkus(token, campaignsArray);
    
    // –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª (—Ç–æ—á–Ω–æ –∫–∞–∫ —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞)
    const workbook = XLSX.utils.book_new();
    const worksheet = XLSX.utils.aoa_to_sheet([]);

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ (—Ç–æ—á–Ω–æ –∫–∞–∫ —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞)
    const headers = [
      'ID –∫–∞–º–ø–∞–Ω–∏–∏',
      '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
      '–î–∞—Ç–∞',
      '–°—É–º–º–∞',
      '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
      '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
      '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      'SKU ID',
      '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    XLSX.utils.sheet_add_aoa(worksheet, [headers], { origin: 'A1' });

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ (–∫–∞–∫ —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞)
    const columnWidths = [
      { wch: 15 }, // ID –∫–∞–º–ø–∞–Ω–∏–∏
      { wch: 30 }, // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
      { wch: 15 }, // –î–∞—Ç–∞
      { wch: 15 }, // –°—É–º–º–∞
      { wch: 20 }, // –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è
      { wch: 15 }, // –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
      { wch: 20 }, // –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
      { wch: 40 }, // SKU ID
      { wch: 25 }  // –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
    ];
    
    worksheet['!cols'] = columnWidths;

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel (–∫–∞–∫ —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞)
    const reportPeriod = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;
    
    const excelData = financialData.map((record, index) => [
      record.advertId,
      record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è',
      record.date,
      record.sum,
      record.bill === 1 ? '–°—á–µ—Ç' : '–ë–∞–ª–∞–Ω—Å',
      record.type,
      record.docNumber,
      skusMap.get(record.advertId) || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
      reportPeriod
    ]);

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    XLSX.utils.sheet_add_aoa(worksheet, excelData, { origin: 'A2' });

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–∫–∞–∫ —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞)
    const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1');
    for (let col = range.s.c; col <= range.e.c; col++) {
      const cellAddress = XLSX.utils.encode_cell({ r: 0, c: col });
      if (!worksheet[cellAddress]) continue;
      
      worksheet[cellAddress].s = {
        font: { bold: true },
        fill: { fgColor: { rgb: "E0E0E0" } }
      };
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (—Ü–µ–ª—ã–µ –±–µ–∑ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö, –¥—Ä–æ–±–Ω—ã–µ —Å –∑–∞–ø—è—Ç–æ–π)
    for (let row = 1; row <= financialData.length; row++) {
      const sumCell = XLSX.utils.encode_cell({ r: row, c: 3 }); // –ö–æ–ª–æ–Ω–∫–∞ "–°—É–º–º–∞"
      if (worksheet[sumCell]) {
        // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: 4092 –¥–ª—è —Ü–µ–ª—ã—Ö, 4092,10 –¥–ª—è –¥—Ä–æ–±–Ω—ã—Ö (–∑–∞–ø—è—Ç–∞—è –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å)
        worksheet[sumCell].z = '# ##0,##';
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
        const cellValue = worksheet[sumCell].v;
        if (typeof cellValue === 'string') {
          const numValue = parseFloat(String(cellValue).replace(/[^\d.,]/g, '').replace(',', '.'));
          if (!isNaN(numValue)) {
            worksheet[sumCell].v = numValue;
            worksheet[sumCell].t = 'n';
          }
        }
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç –≤ –∫–Ω–∏–≥—É
    XLSX.utils.book_append_sheet(workbook, worksheet, '–§–∏–Ω–∞–Ω—Å—ã –†–ö');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–π–ª
    const buffer = XLSX.write(workbook, { bookType: "xlsx", type: "buffer" });
    const fileName = `–§–∏–Ω–∞–Ω—Å—ã –†–ö - ${startDate}‚Äì${endDate}.xlsx`;

    const endTime = Date.now();
    console.log(`‚úÖ –û—Ç—á–µ—Ç "–§–∏–Ω–∞–Ω—Å—ã –†–ö" —Å–æ–∑–¥–∞–Ω –∑–∞ ${endTime - startTime}ms. –ó–∞–ø–∏—Å–µ–π: ${financialData.length}`);

    return new NextResponse(buffer, {
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        'Content-Disposition': `attachment; filename="${encodeURIComponent(fileName)}"`,
      },
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö":', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞' },
      { status: 500 }
    );
  }
}
