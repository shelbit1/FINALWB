import { NextRequest, NextResponse } from 'next/server';
import { fetchCampaignSkus, fetchFinancialData } from '../../../../finance-utils';

export const runtime = "nodejs";

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { startDate, endDate, token } = body;

    if (!token || !startDate || !endDate) {
      return NextResponse.json({ 
        error: 'token, startDate –∏ endDate –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' 
      }, { status: 400 });
    }

    console.log('üöÄ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö "–§–∏–Ω–∞–Ω—Å—ã –†–ö"...');

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±—É—Ñ–µ—Ä–Ω—ã–º–∏ –¥–Ω—è–º–∏
    const financialData = await fetchFinancialData(token, startDate, endDate);

    if (financialData.length === 0) {
      return NextResponse.json({ 
        fields: [
          'ID –∫–∞–º–ø–∞–Ω–∏–∏',
          '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
          '–î–∞—Ç–∞',
          '–°—É–º–º–∞',
          '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
          '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
          '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
          'SKU ID',
          '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
        ],
        rows: []
      });
    }

    // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const uniqueCampaigns = new Map();
    financialData.forEach(record => {
      if (!uniqueCampaigns.has(record.advertId)) {
        uniqueCampaigns.set(record.advertId, {
          advertId: record.advertId,
          name: record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è'
        });
      }
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ SKU ID
    const campaignsArray = Array.from(uniqueCampaigns.values());
    const skusMap = await fetchCampaignSkus(token, campaignsArray);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
    const reportPeriod = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel (–±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    const financeExcelData = financialData.map(record => ({
      "ID –∫–∞–º–ø–∞–Ω–∏–∏": record.advertId,
      "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏": record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è',
      "–î–∞—Ç–∞": record.date,
      "–°—É–º–º–∞": record.sum, // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ —á–∏—Å–ª–æ, –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      "–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è": record.bill === 1 ? '–°—á–µ—Ç' : '–ë–∞–ª–∞–Ω—Å',
      "–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏": record.type,
      "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞": record.docNumber,
      "SKU ID": skusMap.get(record.advertId) || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
      "–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞": reportPeriod
    }));

    const fields = [
      'ID –∫–∞–º–ø–∞–Ω–∏–∏',
      '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
      '–î–∞—Ç–∞',
      '–°—É–º–º–∞',
      '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
      '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
      '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      'SKU ID',
      '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
    ];

    console.log(`‚úÖ –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ "–§–∏–Ω–∞–Ω—Å—ã –†–ö" –ø–æ–ª—É—á–µ–Ω—ã. –ó–∞–ø–∏—Å–µ–π: ${financeExcelData.length}`);

    return NextResponse.json({ fields, rows: financeExcelData });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö "–§–∏–Ω–∞–Ω—Å—ã –†–ö":', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö' },
      { status: 500 }
    );
  }
}
