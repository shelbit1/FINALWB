"use client";

import { useState } from "react";
import * as XLSX from "xlsx";

export default function Home() {
  const [token, setToken] = useState(
    "eyJhbGciOiJFUzI1NiIsImtpZCI6IjIwMjUwNTIwdjEiLCJ0eXAiOiJKV1QifQ.eyJlbnQiOjEsImV4cCI6MTc2NjExMDk4NCwiaWQiOiIwMTk3ODg5Mi02M2U3LTczOWYtYTEyMC02MjU3ZGUxZmM1YjciLCJpaWQiOjI5MzkxMDIxLCJvaWQiOjU5NjI1LCJzIjoxMDczNzQ5NzU4LCJzaWQiOiJmMTEwN2UwOS1iMGNiLTVjYTctYTU0Mi03M2IxYzZhNjQ0N2UiLCJ0IjpmYWxzZSwidWlkIjoyOTM5MTAyMX0.sW33A2YFcxWhuVEilgGTSsSc2TASz1MyeLPN9G4x-lnSgM2yAu7O7QvZcomXbnNFZpUhsSA2LRj5YjMALs7xHw"
  );
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
  const getLastCompletedWeek = () => {
    const today = new Date();
    const dayOfWeek = today.getDay(); // 0 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 1 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, ..., 6 = —Å—É–±–±–æ—Ç–∞
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (–∫–æ–Ω–µ—Ü –Ω–µ–¥–µ–ª–∏)
    let lastSunday = new Date(today);
    
    if (dayOfWeek === 0) {
      // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –±–µ—Ä–µ–º –≤—á–µ—Ä–∞—à–Ω–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (–Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥)
      lastSunday.setDate(today.getDate() - 7);
    } else {
      // –ò–Ω–∞—á–µ –≤—ã—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –ø—Ä–æ—à–ª–æ–≥–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è
      lastSunday.setDate(today.getDate() - dayOfWeek);
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ (6 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –æ—Ç –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è)
    const mondayOfWeek = new Date(lastSunday);
    mondayOfWeek.setDate(lastSunday.getDate() - 6);
    
    console.log('–°–µ–≥–æ–¥–Ω—è:', today.toISOString().split('T')[0]);
    console.log('–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:', dayOfWeek);
    console.log('–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ:', lastSunday.toISOString().split('T')[0]);
    console.log('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –Ω–µ–¥–µ–ª–∏:', mondayOfWeek.toISOString().split('T')[0]);
    
    return {
      monday: mondayOfWeek.toISOString().split('T')[0],
      sunday: lastSunday.toISOString().split('T')[0]
    };
  };
  
  const getDefaultWeek = getLastCompletedWeek();
  const [selectedMonday, setSelectedMonday] = useState(getDefaultWeek.monday);
  const [periodA, setPeriodA] = useState(getDefaultWeek.monday);
  const [periodB, setPeriodB] = useState(getDefaultWeek.sunday);
  const [isLoadingReport, setIsLoadingReport] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
  const handleMondayChange = (mondayDate: string) => {
    const monday = new Date(mondayDate);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω –∏–º–µ–Ω–Ω–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    if (monday.getDay() !== 1) {
      alert("–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫!");
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–¥–µ–ª—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    const sunday = new Date(monday);
    sunday.setDate(monday.getDate() + 6);
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    if (sunday >= today) {
      alert("–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –Ω–µ–¥–µ–ª–∏!");
      return;
    }
    
    setSelectedMonday(mondayDate);
    setPeriodA(mondayDate);
    setPeriodB(sunday.toISOString().split('T')[0]);
  };

  const handleDownload = async () => {
    try {
      setIsLoadingReport(true);
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
      if (!token.trim()) {
        throw new Error("–í–≤–µ–¥–∏—Ç–µ API —Ç–æ–∫–µ–Ω Wildberries");
      }
      
      if (!periodA || !periodB) {
        throw new Error("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
      }
      
      const dateFrom = new Date(periodA);
      const dateTo = new Date(periodB);
      const today = new Date();
      today.setHours(23, 59, 59, 999); // –ö–æ–Ω–µ—Ü —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
      
      if (dateFrom > dateTo) {
        throw new Error("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è");
      }
      
      if (dateTo > today) {
        throw new Error("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º");
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω (–±–æ–ª—å—à–µ 31 –¥–Ω—è)
      const daysDiff = Math.ceil((dateTo.getTime() - dateFrom.getTime()) / (1000 * 60 * 60 * 24));
      if (daysDiff > 31) {
        throw new Error("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—ã–≥—Ä—É–∑–∫–∏: 31 –¥–µ–Ω—å. –í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—å—à–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç");
      }
      
      if (daysDiff < 1) {
        throw new Error("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—ã–≥—Ä—É–∑–∫–∏: 1 –¥–µ–Ω—å");
      }
      
      const payload = { token, dateFrom: periodA, dateTo: periodB };

      console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ API...", payload);

      let resReport, resPaid, resAcceptance, resFinanceRK, resNomenclature;
      
      try {
        // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –≤—Å–µ —Å—Ä–∞–∑—É, –∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ API
        console.log("üìä –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...");
        resReport = await fetch("/api/wb/report", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        }).catch(err => {
          console.error("–û—à–∏–±–∫–∞ fetch –¥–ª—è –æ—Ç—á–µ—Ç–∞:", err);
          throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞: ${err.message}`);
        });

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
        await new Promise(resolve => setTimeout(resolve, 500));
        
        console.log("üìä –ó–∞–ø—É—Å–∫ –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è...");
        resPaid = await fetch("/api/wb/paid-storage", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        }).catch(err => {
          console.error("–û—à–∏–±–∫–∞ fetch –¥–ª—è –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è:", err);
          throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${err.message}`);
        });

        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ (—É –Ω–µ—ë –ª–∏–º–∏—Ç 1 –∑–∞–ø—Ä–æ—Å –≤ –º–∏–Ω—É—Ç—É)
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        console.log("üìä –ó–∞–ø—É—Å–∫ –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏...");
        resAcceptance = await fetch("/api/wb/acceptance-report", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        }).catch(err => {
          console.error("–û—à–∏–±–∫–∞ fetch –¥–ª—è –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏:", err);
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
          return {
            ok: true,
            json: async () => ({
              fields: [
                '–ö–æ–ª-–≤–æ',
                '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI',
                'Income ID',
                '–ê—Ä—Ç–∏–∫—É–ª WB',
                '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö',
                '–ü—Ä–µ–¥–º–µ—Ç',
                '–°—É–º–º–∞ (—Ä—É–±)',
                '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞',
                '–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞'
              ],
              rows: []
            })
          };
        });

        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –†–ö
        await new Promise(resolve => setTimeout(resolve, 500));
        
        console.log("üìä –ó–∞–ø—É—Å–∫ –æ—Ç—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –†–ö...");
        resFinanceRK = await fetch("/api/reports/finance-rk-data", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ token, startDate: periodA, endDate: periodB }),
        }).catch(err => {
          console.error("–û—à–∏–±–∫–∞ fetch –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –†–ö:", err);
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
          return {
            ok: true,
            json: async () => ({
              fields: [
                'ID –∫–∞–º–ø–∞–Ω–∏–∏',
                '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
                '–î–∞—Ç–∞',
                '–°—É–º–º–∞',
                '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
                '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
                '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
                'SKU ID',
                '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
              ],
              rows: []
            })
          };
        });

        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–æ–π
        await new Promise(resolve => setTimeout(resolve, 500));
        
        console.log("üìä –ó–∞–ø—É—Å–∫ –æ—Ç—á–µ—Ç–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã...");
        resNomenclature = await fetch("/api/wb/nomenclature", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ token }),
        }).catch(err => {
          console.error("–û—à–∏–±–∫–∞ fetch –¥–ª—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã:", err);
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
          return {
            ok: true,
            json: async () => ({
              fields: [
                "ID —Ç–æ–≤–∞—Ä–∞",
                "ID –ø—Ä–µ–¥–º–µ—Ç–∞", 
                "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞",
                "–ë—Ä–µ–Ω–¥",
                "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
                "–ü—Ä–µ–¥–º–µ—Ç",
                "–î–ª–∏–Ω–∞ (—Å–º)",
                "–®–∏—Ä–∏–Ω–∞ (—Å–º)",
                "–í—ã—Å–æ—Ç–∞ (—Å–º)",
                "–û–±—ä–µ–º (–ª)",
                "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
                "–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
                "–ó–∞–ø—Ä–µ—â–µ–Ω",
                "–°—Ç–∞—Ç—É—Å",
                "ID —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏",
                "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä",
                "–†–∞–∑–º–µ—Ä WB",
                "SKU",
                "–î–∞—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏"
              ],
              rows: []
            })
          };
        });
      } catch (fetchError) {
        console.error("Promise.all fetch error:", fetchError);
        throw fetchError;
      }

      console.log("–ü–æ–ª—É—á–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã:", { 
        reportStatus: resReport.status, 
        paidStatus: resPaid.status,
        acceptanceStatus: resAcceptance.ok ? 'success' : 'fallback',
        financeRKStatus: resFinanceRK.ok ? 'success' : 'fallback',
        nomenclatureStatus: resNomenclature.ok ? 'success' : 'fallback'
      });

      if (!resReport.ok) {
        const err = await resReport.json().catch(() => ({}));
        throw new Error(err.error || `–û—à–∏–±–∫–∞ –æ—Ç—á—ë—Ç–∞: ${resReport.status}`);
      }
      if (!resPaid.ok) {
        const err = await resPaid.json().catch(() => ({}));
        throw new Error(err.error || `–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${resPaid.status}`);
      }
      // resAcceptance –∏ resFinanceRK –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç ok: true (–ª–∏–±–æ –¥–∞–Ω–Ω—ã–µ, –ª–∏–±–æ –ø—É—Å—Ç–æ–π fallback)

      const report: { fields: string[]; rows: Record<string, unknown>[] } = await resReport.json();
      const paid: { fields: string[]; rows: Record<string, unknown>[] } = await resPaid.json();
      const acceptance: { fields: string[]; rows: Record<string, unknown>[] } = await resAcceptance.json();
      const financeRK: { fields: string[]; rows: Record<string, unknown>[] } = await resFinanceRK.json();
      const nomenclature: { fields: string[]; rows: Record<string, unknown>[] } = await resNomenclature.json();

      // –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ –∏–∑ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ —Å –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–æ–π
      // –í–ê–ñ–ù–û: –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ø–æ "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö" (–ø–µ—Ä–∏–æ–¥ -1 –¥–µ–Ω—å)
      if (acceptance.rows.length > 0 && report.rows.length > 0) {
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è nmId -> –Ω–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞ –∏–∑ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        const nmIdToReportNumber = new Map<number, string>();
        
        report.rows.forEach(row => {
          const nmId = Number(row.nm_id);
          const reportNumber = String(row.realizationreport_id || '');
          if (nmId && reportNumber) {
            nmIdToReportNumber.set(nmId, reportNumber);
          }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –æ—Ç—á–µ—Ç–æ–≤
        acceptance.rows = acceptance.rows.map(row => ({
          ...row,
          "–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞": nmIdToReportNumber.get(Number(row["–ê—Ä—Ç–∏–∫—É–ª WB"])) || "–ù–µ –Ω–∞–π–¥–µ–Ω"
        }));

        console.log(`üìä –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–æ–º–µ—Ä–æ–≤ –æ—Ç—á–µ—Ç–æ–≤: ${nmIdToReportNumber.size} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤`);
      }

      const reportHeader = report.fields;
      const reportRows = report.rows.map((row) => reportHeader.map((key) => row[key] ?? ""));
      const reportSheet = XLSX.utils.aoa_to_sheet([reportHeader, ...reportRows]);

      const paidHeader = paid.fields;
      const paidRows = paid.rows.map((row) => paidHeader.map((key) => row[key] ?? ""));
      const paidSheet = XLSX.utils.aoa_to_sheet([paidHeader, ...paidRows]);

      const acceptanceHeader = acceptance.fields;
      const acceptanceRows = acceptance.rows.map((row) => acceptanceHeader.map((key) => row[key] ?? ""));
      const acceptanceSheet = XLSX.utils.aoa_to_sheet([acceptanceHeader, ...acceptanceRows]);

      const financeRKHeader = financeRK.fields;
      const financeRKRows = financeRK.rows.map((row) => {
        return financeRKHeader.map((key) => {
          const value = row[key] ?? "";
          // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ "–°—É–º–º–∞" - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —á–∏—Å–ª–æ
          if (key === '–°—É–º–º–∞') {
            if (typeof value === 'number') {
              return value; // –£–∂–µ —á–∏—Å–ª–æ
            } else if (typeof value === 'string') {
              const numValue = parseFloat(String(value).replace(/[^\d.]/g, ''));
              return isNaN(numValue) ? 0 : numValue;
            }
            return 0;
          }
          return value;
        });
      });
      
      const financeRKSheet = XLSX.utils.aoa_to_sheet([financeRKHeader, ...financeRKRows]);

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–æ—Å—Å–∏–π—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ "–°—É–º–º–∞"
      if (financeRKRows.length > 0) {
        const sumColumnIndex = financeRKHeader.indexOf('–°—É–º–º–∞');
        if (sumColumnIndex !== -1) {
          // –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤—Å–µ–π –∫–æ–ª–æ–Ω–∫–∏
          const range = XLSX.utils.decode_range(financeRKSheet['!ref'] || 'A1');
          for (let row = 1; row <= range.e.r; row++) {
            const cellAddress = XLSX.utils.encode_cell({ r: row, c: sumColumnIndex });
            if (financeRKSheet[cellAddress]) {
              // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–µ–ª: –ø—Ä–æ–±–µ–ª—ã –¥–ª—è —Ç—ã—Å—è—á, –∑–∞–ø—è—Ç–∞—è –¥–ª—è –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö
              financeRKSheet[cellAddress].z = '# ### ##0,##';
              financeRKSheet[cellAddress].t = 'n'; // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Ç–∏–ø - —á–∏—Å–ª–æ
            }
          }
        }
      }

      const workbook = XLSX.utils.book_new();
      // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
      const nomenclatureHeader = nomenclature.fields;
      const nomenclatureRows = nomenclature.rows.map((row) => nomenclatureHeader.map((key) => row[key] ?? ""));
      const nomenclatureSheet = XLSX.utils.aoa_to_sheet([nomenclatureHeader, ...nomenclatureRows]);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
      const nomenclatureColWidths = [
        { wch: 12 }, // ID —Ç–æ–≤–∞—Ä–∞
        { wch: 12 }, // ID –ø—Ä–µ–¥–º–µ—Ç–∞
        { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞
        { wch: 15 }, // –ë—Ä–µ–Ω–¥
        { wch: 30 }, // –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
        { wch: 15 }, // –ü—Ä–µ–¥–º–µ—Ç
        { wch: 12 }, // –î–ª–∏–Ω–∞ (—Å–º)
        { wch: 12 }, // –®–∏—Ä–∏–Ω–∞ (—Å–º)
        { wch: 12 }, // –í—ã—Å–æ—Ç–∞ (—Å–º)
        { wch: 12 }, // –û–±—ä–µ–º (–ª)
        { wch: 16 }, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        { wch: 16 }, // –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        { wch: 10 }, // –ó–∞–ø—Ä–µ—â–µ–Ω
        { wch: 8 },  // –°—Ç–∞—Ç—É—Å
        { wch: 15 }, // ID —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        { wch: 15 }, // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä
        { wch: 12 }, // –†–∞–∑–º–µ—Ä WB
        { wch: 20 }, // SKU
        { wch: 12 }, // –î–∞—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏
        { wch: 15 }  // –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
      ];
      nomenclatureSheet["!cols"] = nomenclatureColWidths;

      // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" –∏–∑ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
      const createProductsSheet = () => {
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –ø—Ä–æ–¥–∞–≤—Ü–∞
        const groupedProducts = new Map<string, any[]>();
        
        nomenclature.rows.forEach((row: any) => {
          const vendorCode = row["–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞"] || "–ë–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞";
          if (!groupedProducts.has(vendorCode)) {
            groupedProducts.set(vendorCode, []);
          }
          groupedProducts.get(vendorCode)?.push(row);
        });

        // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª–∏—Å—Ç–∞ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" —Å –ø—É—Å—Ç—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ —Å–≤–µ—Ä—Ö—É
        const productsHeaders = ["–ê—Ä—Ç–∏–∫—É–ª", "–†–∞–∑–º–µ—Ä", "–®—Ç—Ä–∏—Ö–∫–æ–¥", "–ê—Ä—Ç–∏–∫—É–ª WB", "–ë—Ä–µ–Ω–¥"];
        const productsData = [
          [], // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ 1
          [], // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ 2
          productsHeaders // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ 3
        ];

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        Array.from(groupedProducts.entries())
          .sort(([a], [b]) => a.localeCompare(b)) // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
          .forEach(([vendorCode, products]) => {
            products.forEach((product: any) => {
              productsData.push([
                vendorCode, // –ê—Ä—Ç–∏–∫—É–ª
                product["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä"] || "", // –†–∞–∑–º–µ—Ä - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π
                product["SKU"] || "", // –®—Ç—Ä–∏—Ö–∫–æ–¥ (–∏—Å–ø–æ–ª—å–∑—É–µ–º SKU –∫–∞–∫ —à—Ç—Ä–∏—Ö–∫–æ–¥)
                product["ID —Ç–æ–≤–∞—Ä–∞"] || "", // –ê—Ä—Ç–∏–∫—É–ª WB (nmID)
                product["–ë—Ä–µ–Ω–¥"] || "" // –ë—Ä–µ–Ω–¥
              ]);
            });
          });

        return XLSX.utils.aoa_to_sheet(productsData);
      };

      const productsSheet = createProductsSheet();
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ª–∏—Å—Ç–∞ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
      productsSheet["!cols"] = [
        { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª
        { wch: 15 }, // –†–∞–∑–º–µ—Ä
        { wch: 25 }, // –®—Ç—Ä–∏—Ö–∫–æ–¥
        { wch: 15 }, // –ê—Ä—Ç–∏–∫—É–ª WB
        { wch: 20 }  // –ë—Ä–µ–Ω–¥
      ];

      XLSX.utils.book_append_sheet(workbook, productsSheet, "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞");
      XLSX.utils.book_append_sheet(workbook, reportSheet, "–ï–∂–µ–Ω–µ–¥ –æ—Ç—á–µ—Ç");
      XLSX.utils.book_append_sheet(workbook, paidSheet, "–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ");
      XLSX.utils.book_append_sheet(workbook, acceptanceSheet, "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞");
      XLSX.utils.book_append_sheet(workbook, financeRKSheet, "–§–∏–Ω–∞–Ω—Å—ã –†–ö");
      XLSX.utils.book_append_sheet(workbook, nomenclatureSheet, "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞");
      const arrayBuffer = XLSX.write(workbook, { bookType: "xlsx", type: "array" });
      const blob = new Blob([arrayBuffer], {
        type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      });
      const url = URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = "–û—Ç—á–µ—Ç—ã_WB.xlsx";
      document.body.appendChild(link);
      link.click();
      link.remove();
      URL.revokeObjectURL(url);
    } catch (e) {
      console.error("–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:", e);
      console.error("–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:", (e as Error)?.stack);
      
      const errorMessage = (e as Error).message || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª";
      
      // –ë–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
      let userFriendlyMessage = errorMessage;
      if (errorMessage.includes("there are no companies with correct intervals")) {
        userFriendlyMessage = "–û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n" +
          "‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç\n" +
          "‚Ä¢ –ù–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥\n" +
          "‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞";
      } else if (errorMessage.includes("401") || errorMessage.includes("Unauthorized")) {
        userFriendlyMessage = "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞ Wildberries";
      } else if (errorMessage.includes("403") || errorMessage.includes("Forbidden")) {
        userFriendlyMessage = "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Ç–æ–∫–µ–Ω–∞ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞";
      } else if (errorMessage.includes("429") || errorMessage.includes("Too Many Requests") || errorMessage.includes("too many requests")) {
        userFriendlyMessage = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Wildberries.\n\n" +
          "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n" +
          "‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π\n" +
          "‚Ä¢ –ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç—á–µ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\n" +
          "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏)\n" +
          "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã API –Ω–∞ https://dev.wildberries.ru/openapi/api-information";
      } else if (errorMessage.includes("500") || errorMessage.includes("Internal Server Error")) {
        userFriendlyMessage = "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Wildberries. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ";
      } else if (errorMessage.includes("Failed to fetch") || errorMessage.includes("fetch failed")) {
        userFriendlyMessage = "–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n" +
          "‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n" +
          "‚Ä¢ –†–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (npm run dev)\n" +
          "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–º –∏–ª–∏ —Ñ–∞–π—Ä–≤–æ–ª–ª–æ–º";
      } else if (errorMessage.includes("–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")) {
        userFriendlyMessage = errorMessage + "\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n" +
          "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º\n" +
          "‚Ä¢ –°–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω\n" +
          "‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –±—Ä–∞—É–∑–µ—Ä–æ–º –∏–ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–º";
      }
      
      alert(userFriendlyMessage);
    } finally {
      setIsLoadingReport(false);
    }
  };

  return (
    <div className="min-h-screen w-full flex items-center justify-center p-6">
      <div className="w-full max-w-xl rounded-2xl border border-black/[.08] dark:border-white/[.145] p-6 bg-white dark:bg-[#0f0f0f]">
        <div className="flex items-center justify-between mb-6">
          <h1 className="text-xl font-semibold">–í—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h1>
        </div>

          <div className="flex flex-col gap-5">
            <div className="flex flex-col gap-2">
              <label htmlFor="wb-token" className="text-sm font-medium">
                –ê–ü–ò –í–ë:
              </label>
              <input
                id="wb-token"
                type="password"
                value={token}
                onChange={(e) => setToken(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –í–ë"
                className="w-full h-11 rounded-lg border border-black/[.12] dark:border-white/[.18] bg-transparent px-3 outline-none focus:ring-2 focus:ring-[#3b82f6]"
              />
            </div>

            <div className="flex flex-col gap-2">
            <span className="text-sm font-medium">–í—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏:</span>
            <div className="flex flex-col gap-3">
                <div className="flex flex-col gap-1">
                <label htmlFor="monday-select" className="text-xs text-black/60 dark:text-white/70">
                  –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª–∏) - —Ç–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –Ω–µ–¥–µ–ª–∏
                  </label>
                  <input
                  id="monday-select"
                    type="date"
                  value={selectedMonday}
                  onChange={(e) => handleMondayChange(e.target.value)}
                    className="h-11 rounded-lg border border-black/[.12] dark:border-white/[.18] bg-transparent px-3 outline-none focus:ring-2 focus:ring-[#3b82f6]"
                  />
                </div>
              <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-3">
                <div className="text-xs text-gray-600 dark:text-gray-400 mb-1">
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥:
                </div>
                <div className="text-sm font-medium">
                  {new Date(periodA).toLocaleDateString('ru-RU')} - {new Date(periodB).toLocaleDateString('ru-RU')}
                </div>
                <div className="text-xs text-gray-500 dark:text-gray-500 mt-1">
                  (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
                </div>
              </div>
              </div>
            </div>

            <div className="pt-2 flex flex-col gap-3">
              <button
                type="button"
                onClick={handleDownload}
                disabled={isLoadingReport}
                className={`w-full h-11 rounded-lg bg-black text-white dark:bg-white dark:text-black font-medium transition-opacity ${
                  isLoadingReport ? "opacity-60 cursor-not-allowed" : "hover:opacity-90"
                }`}
              >
                {isLoadingReport ? (
                  <span className="inline-flex items-center gap-2">
                    <span className="inline-block h-4 w-4 rounded-full border-2 border-white border-t-transparent animate-spin" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </span>
                ) : (
                  "–°–∫–∞—á–∞—Ç—å"
                )}
              </button>
            </div>
          </div>
      </div>
    </div>
  );
}
