// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞)
export interface AcceptanceData {
  count: number;
  giCreateDate: string;
  incomeId: number;
  nmID: number;
  shkCreateDate: string;
  subjectName: string;
  total: number;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
interface CreateTaskResponse {
  data: {
    taskId: string;
  };
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
interface TaskStatusResponse {
  data: {
    status: 'pending' | 'done' | 'error';
  };
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API Wildberries —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–¥–∞—á–∏ –∏ –æ–∂–∏–¥–∞–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
 */
export async function fetchAcceptanceData(apiKey: string, dateFrom: string, dateTo: string): Promise<AcceptanceData[]> {
  try {
    console.log(`üöÄ –ù–∞—á–∞–ª–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏: ${dateFrom} - ${dateTo}`);
    
    // –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞
    const taskId = await createAcceptanceTask(apiKey, dateFrom, dateTo);
    console.log(`üìã –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${taskId}`);
    
    // –®–∞–≥ 2: –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞
    await waitForTaskCompletion(apiKey, taskId);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∞ ${taskId} –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å–∫–∞—á–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ`);
    
    // –®–∞–≥ 3: –°–∫–∞—á–∏–≤–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
    const acceptanceData = await downloadAcceptanceReport(apiKey, taskId);
    console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏: ${acceptanceData.length}`);
    
    return acceptanceData;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏:', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏
 */
async function createAcceptanceTask(apiKey: string, dateFrom: string, dateTo: string): Promise<string> {
  const createUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report?dateFrom=${dateFrom}&dateTo=${dateTo}`;
  
  console.log(`üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞...`);
  console.log(`üåê URL: ${createUrl}`);
  
  const response = await fetch(createUrl, {
    method: 'GET',
    headers: {
      'Authorization': apiKey,
      'Content-Type': 'application/json'
    }
  });

  if (!response.ok) {
    const errorText = await response.text();
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${response.status}`, errorText);
    
    if (response.status === 401) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω');
    } else if (response.status === 400) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–∞—Ç.');
    }
    
    throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${response.status} ${response.statusText}`);
  }

  const responseData: CreateTaskResponse = await response.json();
  const taskId = responseData.data?.taskId;
  
  if (!taskId) {
    throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω ID –∑–∞–¥–∞—á–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API');
  }

  return taskId;
}

/**
 * –û–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
 */
async function waitForTaskCompletion(apiKey: string, taskId: string): Promise<void> {
  console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞...');
  
  let attempts = 0;
  const maxAttempts = 30; // 30 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥ = 2.5 –º–∏–Ω—É—Ç—ã –º–∞–∫—Å–∏–º—É–º
  let isReady = false;

  while (!isReady && attempts < maxAttempts) {
    attempts++;
    console.log(`üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞, –ø–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}...`);
    
    const statusUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/status`;
    
    try {
      const statusResponse = await fetch(statusUrl, {
        method: 'GET',
        headers: {
          'Authorization': apiKey,
          'Content-Type': 'application/json'
        }
      });

      if (statusResponse.ok) {
        const statusData: TaskStatusResponse = await statusResponse.json();
        const status = statusData.data?.status;
        console.log(`üìä –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: ${status}`);
        
        if (status === 'done') {
          isReady = true;
          break;
        } else if (status === 'error') {
          throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Wildberries');
        }
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 'pending', –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
      } else {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ${statusResponse.status}`);
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempts}):`, error);
    }

    if (!isReady && attempts < maxAttempts) {
      console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...');
      await new Promise(resolve => setTimeout(resolve, 5000)); // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
    }
  }

  if (!isReady) {
    throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ (2.5 –º–∏–Ω—É—Ç—ã). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏
 */
async function downloadAcceptanceReport(apiKey: string, taskId: string): Promise<AcceptanceData[]> {
  console.log('üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...');
  
  const downloadUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/download`;
  
  const downloadResponse = await fetch(downloadUrl, {
    method: 'GET',
    headers: {
      'Authorization': apiKey,
      'Content-Type': 'application/json'
    }
  });

  if (!downloadResponse.ok) {
    const errorText = await downloadResponse.text();
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: ${downloadResponse.status}`, errorText);
    throw new Error(`–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: ${downloadResponse.status} ${downloadResponse.statusText}`);
  }

  const acceptanceData: AcceptanceData[] = await downloadResponse.json();
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  if (!Array.isArray(acceptanceData)) {
    throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ API');
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∏
  const validData = acceptanceData.filter((item: any) => {
    return (
      typeof item === 'object' &&
      item !== null &&
      typeof item.count === 'number' &&
      typeof item.nmID === 'number' &&
      typeof item.total === 'number'
    );
  });

  if (validData.length !== acceptanceData.length) {
    console.warn(`‚ö†Ô∏è –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${acceptanceData.length - validData.length} –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π`);
  }

  return validData;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Excel
 */
export function transformAcceptanceDataToExcel(acceptanceData: AcceptanceData[], startDate: string, endDate: string) {
  const reportPeriod = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;
  
  return acceptanceData.map((item) => ({
    "–ö–æ–ª-–≤–æ": item.count || 0,
    "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI": item.giCreateDate ? new Date(item.giCreateDate).toLocaleDateString('ru-RU') : '',
    "Income ID": item.incomeId || '',
    "–ê—Ä—Ç–∏–∫—É–ª WB": item.nmID || '',
    "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö": item.shkCreateDate ? new Date(item.shkCreateDate).toLocaleDateString('ru-RU') : '',
    "–ü—Ä–µ–¥–º–µ—Ç": item.subjectName || '',
    "–°—É–º–º–∞ (—Ä—É–±)": item.total || 0,
    "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞": reportPeriod
  }));
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–µ—Ä–∏–æ–¥–∞ –¥–∞—Ç
 */
export function validateDateRange(startDate: string, endDate: string): { isValid: boolean; error?: string } {
  const start = new Date(startDate);
  const end = new Date(endDate);
  const now = new Date();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ
  if (isNaN(start.getTime()) || isNaN(end.getTime())) {
    return { isValid: false, error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç' };
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –±–æ–ª—å—à–µ –∫–æ–Ω–µ—á–Ω–æ–π
  if (start > end) {
    return { isValid: false, error: '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è' };
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–∏–æ–¥ –Ω–µ –±–æ–ª—å—à–µ 31 –¥–Ω—è
  const diffTime = Math.abs(end.getTime() - start.getTime());
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  if (diffDays > 31) {
    return { isValid: false, error: '–ü–µ—Ä–∏–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 31 –¥–µ–Ω—å' };
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç—ã –Ω–µ –≤ –±—É–¥—É—â–µ–º
  if (start > now || end > now) {
    return { isValid: false, error: '–î–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º' };
  }
  
  return { isValid: true };
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –ø–æ–ª–µ–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ Excel (–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞)
 */
export const ACCEPTANCE_FIELD_ORDER: string[] = [
  "–ö–æ–ª-–≤–æ",
  "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI", 
  "Income ID",
  "–ê—Ä—Ç–∏–∫—É–ª WB",
  "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö",
  "–ü—Ä–µ–¥–º–µ—Ç",
  "–°—É–º–º–∞ (—Ä—É–±)",
  "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞"
];

